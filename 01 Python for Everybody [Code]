3.2 - Pay calculator with 1.5 modifier if over 40 hours
hrs = input("Enter Hours:")
rate = input("Enter Rate:")

h = float(hrs)
r = float(rate)

if h < 40:
    grossPay = (h * r)
else:
    h -= 40
    grossPay = (40 * r)
    print(h)
    grossPay += (1.5 * (h * r))

print(grossPay)
========================================================================================
3.3 - Grade Calculator
score = float(input("Enter Score: "))
grade = ""

try:
    if ((score >= 0.9) and (score >= 0) and (score <= 1)):
        grade = "A"
    elif ((score >= 0.8) and (score >= 0) and (score <= 1)):
        grade = "B"
    elif ((score >= 0.7) and (score >= 0) and (score <= 1)):
        grade = "C"
    elif ((score >= 0.6) and (score >= 0) and (score <= 1)):
        grade = "D"
    elif ((score < 0.6) and (score >= 0) and (score <= 1)):
        grade = "F"
    print(grade)
except:
        print("Error storing grade on server.")
        quit()

4.6 - Pay calculator v2
def computepay(h,r):
    grosspay = 0
    if h < 40:
        grosspay = (h * r)
    else:
        h -= 40
        grosspay = (40 * r)
        grosspay += (1.5 * (h * r))
    return grosspay #42.37

hrs = input("Enter Hours:")
rate = input("Enter Rate:")

h = float(hrs)
r = float(rate)

p = computepay(h,r) #10, 20
print("Pay",p)

========================================================================================
5.2 Write a program that repeatedly prompts a user for integer numbers until the user enters 'done'.
Once 'done' is entered, print out the largest and smallest of the numbers. If the user enters anything
other than a valid number catch it with a try/except and put out an appropriate message and ignore the
number. Enter 7, 2, bob, 10, and 4 and match the output below.

largest = None
smallest = None
while True:
    num = input("Enter a number: ")
    if num == "done" : break
    else:
        try:
            num = int(num)
        except:
            print("Invalid input")
            continue
        if largest == None : largest = num
        if smallest == None: smallest = num
        if num > largest:
            largest = num
        if num < smallest:
            smallest = num

print("Maximum is", largest)
print("Minimum is", smallest)

========================================================================================
6.5 Write code using find() and string slicing (see section 6.10) to extract the number at the
end of the line below. Convert the extracted value to a floating point number and print it out.

text = "X-DSPAM-Confidence:    0.8475";
colon = text.find(":")
colon += 4
print(float(text[colon:]))
